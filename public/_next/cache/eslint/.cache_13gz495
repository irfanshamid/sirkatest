[{"/Users/macbook/Downloads/projects/sirka_test/pages/_app.js":"1","/Users/macbook/Downloads/projects/sirka_test/pages/api/service.js":"2","/Users/macbook/Downloads/projects/sirka_test/pages/component/card.js":"3","/Users/macbook/Downloads/projects/sirka_test/pages/component/footer.js":"4","/Users/macbook/Downloads/projects/sirka_test/pages/component/header.js":"5","/Users/macbook/Downloads/projects/sirka_test/pages/component/layout.js":"6","/Users/macbook/Downloads/projects/sirka_test/pages/component/panel.js":"7","/Users/macbook/Downloads/projects/sirka_test/pages/component/skeleton.js":"8","/Users/macbook/Downloads/projects/sirka_test/pages/index.js":"9","/Users/macbook/Downloads/projects/sirka_test/pages/user/[detail].js":"10","/Users/macbook/Downloads/projects/sirka_test/pages/user/form.js":"11","/Users/macbook/Downloads/projects/sirka_test/pages/user/index.js":"12"},{"size":1279,"mtime":1644826461539,"results":"13","hashOfConfig":"14"},{"size":2993,"mtime":1644763463895,"results":"15","hashOfConfig":"14"},{"size":571,"mtime":1644827363724,"results":"16","hashOfConfig":"14"},{"size":247,"mtime":1644686469541,"results":"17","hashOfConfig":"14"},{"size":677,"mtime":1644686498444,"results":"18","hashOfConfig":"14"},{"size":380,"mtime":1644610400293,"results":"19","hashOfConfig":"14"},{"size":1054,"mtime":1644827380268,"results":"20","hashOfConfig":"14"},{"size":520,"mtime":1644827390472,"results":"21","hashOfConfig":"14"},{"size":82,"mtime":1644669581755,"results":"22","hashOfConfig":"14"},{"size":7684,"mtime":1644826933010,"results":"23","hashOfConfig":"14"},{"size":5092,"mtime":1644826923429,"results":"24","hashOfConfig":"14"},{"size":7805,"mtime":1644827271292,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"etf44o",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"/Users/macbook/Downloads/projects/sirka_test/pages/_app.js",[],[],"/Users/macbook/Downloads/projects/sirka_test/pages/api/service.js",["65"],[],"import axios from \"axios\";\nimport swal from \"sweetalert\";\nconst URLS = \"https://fakestoreapi.com\";\n\nexport default {\n  actions: {\n    get_user(limit, sort) {\n      let _param = {\n        limit: limit,\n        sort: sort ? sort : \"asc\",\n      };\n      return new Promise((resolve, reject) => {\n        try {\n          axios\n            .get(URLS + `/users`, {\n              params: _param,\n            })\n            .then((response) => {\n              resolve(response);\n            });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    },\n\n    get_total_user() {\n      return new Promise((resolve, reject) => {\n        try {\n          axios.get(URLS + `/users`).then((response) => {\n            resolve(response);\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    },\n\n    submit_user(data) {\n      return new Promise((resolve, reject) => {\n        try {\n          axios.post(URLS + `/users`, data).then((response) => {\n            if (response.status === 200) {\n              resolve(response.data);\n              this.handling(\"Done\", \"user submited\", \"success\");\n            } else {\n              resolve(\"submit data is error\");\n            }\n          });\n        } catch (error) {\n          reject(error);\n          this.handling(\"Oops\", \"check network or data submition\", \"error\");\n        }\n      });\n    },\n\n    edit_user(uid, data) {\n      return new Promise((resolve, reject) => {\n        try {\n          axios.put(URLS + `/users/` + uid, data).then((response) => {\n            if (response.status === 200) {\n              resolve(response.data);\n              this.handling(\"Done\", \"user edited\", \"success\");\n              window.location.href = \"/user\";\n            } else {\n              resolve(\"update data error\");\n            }\n          });\n        } catch (error) {\n          reject(error);\n          this.handling(\"Oops\", \"check network or data submition\", \"error\");\n        }\n      });\n    },\n\n    get_detail_user(uid) {\n      return new Promise((resolve, reject) => {\n        try {\n          axios.get(URLS + `/users/` + uid).then((response) => {\n            resolve(response);\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    },\n\n    delete_user(uid) {\n      return new Promise((resolve, reject) => {\n        try {\n          axios.delete(URLS + `/users/` + uid).then((response) => {\n            if (response.status === 200) {\n              resolve(response.data);\n              this.handling(\"Success\", \"data has been deleted\", \"success\");\n            } else {\n              resolve(\"error access\");\n              this.handling(\"Oops\", \"something wrong\", \"error\");\n            }\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    },\n\n    handling(title, message, callback) {\n      swal({\n        title: title,\n        text: message,\n        icon: callback,\n        timer: 2000,\n        button: false,\n      });\n    },\n  },\n};\n","/Users/macbook/Downloads/projects/sirka_test/pages/component/card.js",[],[],"/Users/macbook/Downloads/projects/sirka_test/pages/component/footer.js",[],[],"/Users/macbook/Downloads/projects/sirka_test/pages/component/header.js",[],[],"/Users/macbook/Downloads/projects/sirka_test/pages/component/layout.js",[],[],"/Users/macbook/Downloads/projects/sirka_test/pages/component/panel.js",[],[],"/Users/macbook/Downloads/projects/sirka_test/pages/component/skeleton.js",[],[],"/Users/macbook/Downloads/projects/sirka_test/pages/index.js",[],[],"/Users/macbook/Downloads/projects/sirka_test/pages/user/[detail].js",["66"],[],"import { useLayoutEffect, useState } from \"react\";\nimport global from \"../api/service\";\nimport { useRouter } from \"next/router\";\nimport StyledCard from \"../component/card\";\n/* eslint no-use-before-define: 0 */ // --> OFF\n\nexport default function Detail() {\n  const [detail, setDetails] = useState([]);\n  const router = useRouter();\n\n  useLayoutEffect(() => {\n    getDetails(router.query.detail);\n  }, []);\n\n  const getDetails = (id) => {\n    global.actions.get_detail_user(id).then((res) => {\n      setDetails(res.data);\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let data = {\n      id: detail.id,\n      email: e.target.email.value,\n      name: {\n        firstname: e.target.firstname.value,\n        lastname: e.target.lastname.value,\n      },\n      username: e.target.username.value,\n      password: e.target.password.value,\n      address: {\n        city: e.target.city.value,\n        street: e.target.street.value,\n        number: e.target.number.value,\n        zipcode: e.target.zipcode.value,\n        geolocation: {\n          lat: e.target.lat.value,\n          long: e.target.long.value,\n        },\n      },\n      phone: e.target.phone.value,\n    };\n    global.actions.edit_user(router.query.detail, data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <StyledCard>\n        <h3>Detail User</h3>\n        <div className=\"row\">\n          <div className=\"col-md-6 my-2\">\n            <div className=\"form-groupd\">\n              <label className=\"form-label\">First Name</label>\n              <input\n                type=\"text\"\n                name=\"firstname\"\n                className=\"form-control\"\n                defaultValue={detail.name ? detail.name.firstname : \"\"}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-6 my-2\">\n            <div className=\"form-groupd\">\n              <label className=\"form-label\">Last Name</label>\n              <input\n                type=\"text\"\n                name=\"lastname\"\n                className=\"form-control\"\n                defaultValue={detail.name ? detail.name.lastname : \"\"}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-6 my-2\">\n            <div className=\"form-groupd\">\n              <label className=\"form-label\">Email</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"form-control\"\n                defaultValue={detail ? detail.email : \"\"}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-6 my-2\">\n            <div className=\"form-groupd\">\n              <label className=\"form-label\">Username</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                className=\"form-control\"\n                defaultValue={detail.username ? detail.username : \"\"}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-6 my-2\">\n            <div className=\"form-groupd\">\n              <label className=\"form-label\">Password</label>\n              <input\n                type=\"text\"\n                name=\"password\"\n                className=\"form-control\"\n                defaultValue={detail.password ? detail.password : \"\"}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-6 my-2\">\n            <div className=\"form-groupd\">\n              <label className=\"form-label\">Phone</label>\n              <input\n                type=\"text\"\n                name=\"phone\"\n                className=\"form-control\"\n                defaultValue={detail.phone ? detail.phone : \"\"}\n              />\n            </div>\n          </div>\n        </div>\n      </StyledCard>\n\n      <StyledCard>\n        <h3>Address</h3>\n        <div className=\"row\">\n          <div className=\"col-md-6 my-2\">\n            <div className=\"form-groupd\">\n              <label className=\"form-label\">City</label>\n              <input\n                type=\"text\"\n                name=\"city\"\n                className=\"form-control\"\n                defaultValue={detail.address ? detail.address.city : \"\"}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-6 my-2\">\n            <div className=\"form-groupd\">\n              <label className=\"form-label\">Street</label>\n              <input\n                type=\"text\"\n                name=\"street\"\n                className=\"form-control\"\n                defaultValue={detail.address ? detail.address.street : \"\"}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-2 my-2\">\n            <div className=\"form-groupd\">\n              <label className=\"form-label\">Number</label>\n              <input\n                type=\"text\"\n                name=\"number\"\n                className=\"form-control\"\n                defaultValue={detail.address ? detail.address.number : \"\"}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-4 my-2\">\n            <div className=\"form-groupd\">\n              <label className=\"form-label\">Zipcode</label>\n              <input\n                type=\"text\"\n                name=\"zipcode\"\n                className=\"form-control\"\n                defaultValue={detail.address ? detail.address.zipcode : \"\"}\n              />\n            </div>\n          </div>\n          <div className=\"col-md-3 my-2\">\n            <div className=\"form-groupd\">\n              <label className=\"form-label\">Latitude</label>\n              <input\n                type=\"text\"\n                name=\"lat\"\n                className=\"form-control\"\n                defaultValue={\n                  detail.address ? detail.address.geolocation.lat : \"\"\n                }\n              />\n            </div>\n          </div>\n          <div className=\"col-md-3 my-2\">\n            <div className=\"form-groupd\">\n              <label className=\"form-label\">Latitude</label>\n              <input\n                type=\"text\"\n                name=\"long\"\n                className=\"form-control\"\n                defaultValue={\n                  detail.address ? detail.address.geolocation.long : \"\"\n                }\n              />\n            </div>\n          </div>\n        </div>\n      </StyledCard>\n\n      {router.query.index === \"edit\" ? (\n        <StyledCard>\n          <div className=\"row justify-content-end\">\n            <div className=\"col-md-6 my-2 py-2\">\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  defaultValue=\"\"\n                  id=\"confirm\"\n                />\n                <label className=\"form-check-label\" htmlFor=\"confirm\">\n                  Confirm data submitions is valid\n                </label>\n              </div>\n            </div>\n            <div className=\"col-md-3 my-2\">\n              <button className=\"btn btn-secondary w-100\" type=\"button\">\n                Cancel\n              </button>\n            </div>\n            <div className=\"col-md-3 my-2\">\n              <button className=\"btn btn-primary w-100\" type=\"submit\">\n                Save\n              </button>\n            </div>\n          </div>\n        </StyledCard>\n      ) : (\n        <StyledCard>\n          <div className=\"row justify-content-end\">\n            <div className=\"col-md-3 my-2\">\n              <button\n                className=\"btn btn-secondary w-100\"\n                type=\"button\"\n                onClick={() => router.push(\"/user\")}\n              >\n                Back\n              </button>\n            </div>\n          </div>\n        </StyledCard>\n      )}\n    </form>\n  );\n}\n","/Users/macbook/Downloads/projects/sirka_test/pages/user/form.js",[],[],"/Users/macbook/Downloads/projects/sirka_test/pages/user/index.js",["67"],[],"import { useEffect, useState } from \"react\";\nimport global from \"./../api/service\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencil, faEye, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { useRouter } from \"next/router\";\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend } from \"recharts\";\nimport StyledCard from \"../component/card\";\nimport StyledSkeleton from \"../component/skeleton\";\nimport StyledPanel from \"../component/panel\";\n/* eslint no-use-before-define: 0 */ // --> OFF\n\nexport default function Users() {\n  const [list, setList] = useState([]);\n  const [chart, setChart] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [sort, setSorting] = useState(\"asc\");\n  const router = useRouter();\n\n  const COLORS = [\n    \"#307bd1\",\n    \"#30ced1\",\n    \"#d1c130\",\n    \"#c630d1\",\n    \"#d14e30\",\n    \"#2ea3c9\",\n    \"#762ec9\",\n    \"#649cb3\",\n    \"#9b64b3\",\n  ];\n\n  useEffect(() => {\n    getList(limit, sort);\n    getTotal();\n  }, []);\n\n  const getList = (_limit, _sort) => {\n    global.actions.get_user(_limit, _sort).then((res) => {\n      setList(res.data);\n    });\n  };\n\n  const getTotal = () => {\n    global.actions.get_total_user().then((res) => {\n      setTotal(res.data.length);\n\n      var bundle = res.data;\n      var result = [];\n      bundle.reduce(function (res, value) {\n        if (!res[value.address.city]) {\n          res[value.address.city] = { name: value.address.city, value: 0 };\n          result.push(res[value.address.city]);\n        }\n        res[value.address.city].value += 1;\n        return res;\n      }, {});\n      setChart(result);\n    });\n  };\n\n  const onLimit = (attr) => {\n    setLimit(attr);\n    getList(attr, sort);\n  };\n\n  const onSorting = (attr) => {\n    setSorting(attr);\n    getList(limit, attr);\n  };\n\n  const onAction = (action, data) => {\n    if (action === \"create\") {\n      router.push(\"/user/form\");\n    } else {\n      router.push({\n        pathname: \"/user/\" + data.id,\n        query: {\n          index: action,\n        },\n      });\n    }\n  };\n\n  const onDelete = (idx) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this data!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    }).then((willDelete) => {\n      if (willDelete) {\n        global.actions.delete_user(idx).then((res) => {\n          getList(limit, sort);\n        });\n      }\n    });\n  };\n\n  const renderCustomizedLabel = ({ x, y, name, percent, value }) => {\n    return (\n      <text x={x} y={y} fill=\"#333\" fontSize={8} textAnchor=\"middle\">\n        {`${(percent * 100).toFixed(0)}%`} ({value})\n      </text>\n    );\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-8 col-sm-12\">\n        <StyledCard>\n          <div className=\"row mb-3\">\n            <div className=\"col-md-3 col-sm-12\">\n              <button\n                className=\"m-1 btn btn-primary w-100\"\n                onClick={() => onAction(\"create\", null)}\n              >\n                Add Data\n              </button>\n            </div>\n            <div className=\"col-md-2 col-sm-6 py-1\">\n              <select\n                className=\"form-select\"\n                defaultValue={5}\n                onChange={() => onSorting(event.target.value)}\n              >\n                <option value=\"asc\">ASC</option>\n                <option value=\"desc\">DSC</option>\n              </select>\n            </div>\n            <div className=\"col-md-2 col-sm-6 py-1\">\n              <select\n                className=\"form-select\"\n                defaultValue={10}\n                onChange={() => onLimit(event.target.value)}\n              >\n                <option value={5}>5</option>\n                <option value={10}>10</option>\n                <option value={15}>15</option>\n              </select>\n            </div>\n            <div className=\"col-md-5 col-sm-6 py-1\">\n              <input\n                name=\"email\"\n                className=\"form-control\"\n                placeholder=\"search\"\n              />\n            </div>\n          </div>\n          <div className=\"table-responsive\">\n            <table className=\"table table-borderless table-sm table-hover\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Email</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {list.length > 0 ? (\n                  <>\n                    {list.map((item, i) => {\n                      return (\n                        <tr key={i}>\n                          <td scope=\"row\" valign=\"middle\">\n                            <small>{i + 1}</small>\n                          </td>\n                          <td valign=\"middle\">\n                            <small>\n                              {item.name.firstname} {item.name.lastname}\n                            </small>\n                          </td>\n                          <td valign=\"middle\">\n                            <small>{item.email}</small>\n                          </td>\n                          <td valign=\"middle\">\n                            <button\n                              className=\"m-1 rounded-pill btn btn-sm btn-outline-secondary\"\n                              onClick={() => onAction(\"detail\", item)}\n                            >\n                              <FontAwesomeIcon icon={faEye} />\n                            </button>\n                            <button\n                              className=\"m-1 rounded-pill btn btn-sm btn-outline-success\"\n                              onClick={() => onAction(\"edit\", item)}\n                            >\n                              <FontAwesomeIcon icon={faPencil} />\n                            </button>\n                            <button\n                              className=\"m-1 rounded-pill btn btn-sm btn-outline-danger\"\n                              onClick={() => onDelete(item.id)}\n                            >\n                              <FontAwesomeIcon icon={faTrash} />\n                            </button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </>\n                ) : (\n                  <tr>\n                    <td colSpan={5}>\n                      <StyledSkeleton height=\"40px\" total={5} />\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </StyledCard>\n      </div>\n\n      <div className=\"col-md-4\">\n        <StyledCard>\n          <h5>Summary</h5>\n          <StyledPanel summary={total} desc=\"users\" />\n        </StyledCard>\n\n        <StyledCard>\n          <h5>Statics City</h5>\n          <div style={{ width: \"100%\", height: 350 }}>\n            <ResponsiveContainer>\n              <PieChart width={400} height={400}>\n                <Pie\n                  data={chart}\n                  innerRadius={40}\n                  outerRadius={60}\n                  paddingAngle={2}\n                  dataKey=\"value\"\n                  isAnimationActive={false}\n                  labelLine={true}\n                  label={renderCustomizedLabel}\n                >\n                  {chart.map((entry, index) => (\n                    <Cell\n                      key={`cell-${index}`}\n                      fill={COLORS[index % COLORS.length]}\n                    />\n                  ))}\n                </Pie>\n                <Legend align=\"left\" iconSize={10} />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n        </StyledCard>\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"68","severity":1,"message":"69","line":5,"column":1,"nodeType":"70","endLine":116,"endColumn":3},{"ruleId":"71","severity":1,"message":"72","line":13,"column":6,"nodeType":"73","endLine":13,"endColumn":8,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"75","line":35,"column":6,"nodeType":"73","endLine":35,"endColumn":8,"suggestions":"76"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'router.query.detail'. Either include it or remove the dependency array.","ArrayExpression",["77"],"React Hook useEffect has missing dependencies: 'limit' and 'sort'. Either include them or remove the dependency array.",["78"],{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [router.query.detail]",{"range":"83","text":"84"},"Update the dependencies array to be: [limit, sort]",{"range":"85","text":"86"},[401,403],"[router.query.detail]",[1040,1042],"[limit, sort]"]